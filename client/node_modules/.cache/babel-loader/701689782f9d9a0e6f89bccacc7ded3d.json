{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fetih\\\\OneDrive\\\\Desktop\\\\Websites\\\\mern-stack\\\\client\\\\src\\\\compenents\\\\Message\\\\OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../../contexts/ConversationProvider';\nexport default function OpenConversation() {\n  _s();\n\n  const [text, setText] = useState('');\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []);\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    e.target.reset();\n    sendMessage(selectedConversation.recipients.map(recipient => recipient.id), text);\n    setText('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n        children: selectedConversation.messages.map((message, index) => {\n          const lastMessage = selectedConversation.messages.length - 1 === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastMessage ? setRef : null,\n            className: `my-1 d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 \n                                        ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n              children: message.fromMe ? 'You' : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"m-2\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            required: true,\n            valie: text,\n            onChange: e => setText(e.target.value),\n            style: {\n              height: '75px',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OpenConversation, \"kBMn+Im1xmw3DLXACau1ORck0VY=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["C:/Users/fetih/OneDrive/Desktop/Websites/mern-stack/client/src/compenents/Message/OpenConversation.js"],"names":["React","useState","useCallback","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","setRef","node","scrollIntoView","smooth","sendMessage","selectedConversation","handleSubmit","e","preventDefault","target","reset","recipients","map","recipient","id","messages","message","index","lastMessage","length","fromMe","senderName","value","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { Form, InputGroup, Button } from 'react-bootstrap'\r\nimport { useConversations } from '../../contexts/ConversationProvider'\r\n\r\nexport default function OpenConversation() { \r\n\r\n    const [text, setText] = useState('')\r\n    const setRef = useCallback(node => {\r\n        if(node) {\r\n            node.scrollIntoView({ smooth: true })\r\n        }\r\n    }, [] )\r\n    const { sendMessage, selectedConversation } = useConversations()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        e.target.reset()\r\n\r\n        sendMessage(\r\n            selectedConversation.recipients.map(recipient => recipient.id),\r\n            text\r\n        )\r\n        setText('')\r\n    }\r\n\r\n    return(\r\n        <div className=\"d-flex flex-column flex-grow-1\">\r\n            <div className=\"flex-grow-1 overflow-auto\" >\r\n                <div className=\"d-flex flex-column align-items-start justify-content-end px-3\" >\r\n                    { selectedConversation.messages.map((message, index) => {\r\n                        const lastMessage = selectedConversation.messages.length - 1 === index\r\n                        return (\r\n                            <div\r\n                            ref={lastMessage ? setRef : null}\r\n                                key={index}\r\n                                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\r\n                                >\r\n                                <div \r\n                                    className={\r\n                                        `rounded px-2 py-1 \r\n                                        ${ \r\n                                            message.fromMe \r\n                                                ? \r\n                                            'bg-primary text-white' \r\n                                                : \r\n                                            'border'\r\n                                        }`\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        message.text\r\n                                    }\r\n                                </div>\r\n                                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`} >\r\n                                    {\r\n                                        message.fromMe \r\n                                              ? \r\n                                        'You' \r\n                                              : \r\n                                        message.senderName\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }) }\r\n                </div>\r\n            </div>\r\n            <Form onSubmit={ handleSubmit } >\r\n                <Form.Group className=\"m-2\" >\r\n                    <InputGroup>\r\n                        <Form.Control \r\n                        as=\"textarea\" \r\n                        required \r\n                        valie = { text }\r\n                        onChange = { e => setText(e.target.value)}\r\n                        style={{ height: '75px', resize: 'none'}}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button type=\"submit\">\r\n                            Send\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}