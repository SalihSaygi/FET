{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fetih\\\\OneDrive\\\\Desktop\\\\Websites\\\\mern-stack\\\\client\\\\src\\\\contexts\\\\SocketIOProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3031/users',\n  responseType: 'json'\n});\nconst SocketIOContext = /*#__PURE__*/React.createContext(null);\nexport function useSocket() {\n  _s();\n\n  return useContext(SocketIOContext);\n}\n\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const SocketIOProvider = ({}) => {\n  _s2();\n\n  const [socket, setSocket] = useState();\n  const [id, setId] = useState();\n  useEffect(() => {\n    api.get('/:id').then(res => res.data.user._id);\n    const newSocket = io('http://localhost:3050', {\n      query: {\n        id\n      }\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketIOContext.Provider, {\n    value: {\n      socket: [socket, setSocket],\n      id: [id, setId]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SocketIOProvider, \"L44uupqXAh+LTvGz3Y6YyQGsZLY=\");\n\n_c = SocketIOProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketIOProvider\");","map":{"version":3,"sources":["C:/Users/fetih/OneDrive/Desktop/Websites/mern-stack/client/src/contexts/SocketIOProvider.tsx"],"names":["React","useContext","useEffect","useState","io","axios","api","create","baseURL","responseType","SocketIOContext","createContext","useSocket","SocketIOProvider","socket","setSocket","id","setId","get","then","res","data","user","_id","newSocket","query","close","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAiE,OAAjE;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE,6BADY;AAErBC,EAAAA,YAAY,EAAE;AAFO,CAAb,CAAZ;AAKA,MAAMC,eAAe,gBAAGV,KAAK,CAACW,aAAN,CAAoB,IAApB,CAAxB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB,SAAOX,UAAU,CAACS,eAAD,CAAjB;AACH;;GAFeE,S;;AAShB,OAAO,MAAMC,gBAAiC,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM,CAACa,EAAD,EAAKC,KAAL,IAAcd,QAAQ,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZI,IAAAA,GAAG,CAACY,GAAJ,CAAQ,MAAR,EACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,GAD3B;AAGA,UAAMC,SAAS,GAAGpB,EAAE,CAChB,uBADgB,EAEhB;AAAEqB,MAAAA,KAAK,EAAE;AAAET,QAAAA;AAAF;AAAT,KAFgB,CAApB;AAKAD,IAAAA,SAAS,CAACS,SAAD,CAAT;AAEA,WAAO,MAAMA,SAAS,CAACE,KAAV,EAAb;AACH,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEZ,MAAAA,MAAM,EAAE,CAACA,MAAD,EAASC,SAAT,CAAV;AAA+BC,MAAAA,EAAE,EAAE,CAACA,EAAD,EAAKC,KAAL;AAAnC,KAAjC;AAAA,cACKU;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBM;;IAAMd,gB;;KAAAA,gB","sourcesContent":["import React, { ReactNode, useContext, useEffect, useState} from 'react'\r\nimport io from 'socket.io-client'\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3031/users',\r\n    responseType: 'json'\r\n})\r\n\r\nconst SocketIOContext = React.createContext(null)\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketIOContext)\r\n}\r\n\r\ninterface Props {\r\n    name: string,\r\n    children: ReactNode\r\n}\r\n\r\nexport const SocketIOProvider: React.FC<Props> = ({}) => {\r\n    const [socket, setSocket] = useState()\r\n    const [id, setId] = useState()\r\n\r\n    useEffect(() => {\r\n        \r\n        api.get('/:id')\r\n        .then(res => res.data.user._id)\r\n        \r\n        const newSocket = io(\r\n            'http://localhost:3050',\r\n            { query: { id } }\r\n        )\r\n\r\n        setSocket(newSocket)\r\n\r\n        return () => newSocket.close()\r\n    }, [])\r\n\r\n    return (\r\n        <SocketIOContext.Provider value={{ socket: [socket, setSocket], id: [id, setId] }}>\r\n            {children}\r\n        </SocketIOContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}