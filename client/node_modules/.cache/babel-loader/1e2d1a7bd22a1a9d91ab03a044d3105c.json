{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fetih\\\\OneDrive\\\\Desktop\\\\Websites\\\\mern-stack\\\\client\\\\src\\\\compenents\\\\CRUDs\\\\Requests\\\\RequestCreate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\nimport createReport from '../../../hooks/reportsAPI';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport UploadForm from '../../ImageOrVideoUploadForm';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Alert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  title: {\n    margin: 8,\n    fullWidth: true\n  },\n  slider: {\n    width: 300\n  }\n}));\nexport default function ReportForm() {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); //Data\n\n  const [title, setTitle] = useState('');\n  const [animalType, setAnimalType] = useState('');\n  const [animalRace, setAnimalRace] = useState('');\n  const [bounty, setBounty] = useState('');\n  const [danger, setDanger] = useState(1);\n  const [explanation, setExplanation] = useState('');\n  const [isSuccessfull, setIsSuccessfull] = useState(true);\n\n  const onSubmit = async data => {\n    try {\n      setLoading(true); // data.latitude = location.latitude;\n      // data.longitude = location.longitude;\n\n      await createReport(data);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsSuccessfull(false);\n      setLoading(false);\n    }\n  };\n\n  function valuetext(value) {\n    return `\\$${value}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Title\",\n        style: {\n          margin: 8\n        },\n        placeholder: \"Title\",\n        helperText: \"Be Descriptive\",\n        fullWidth: true,\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        inputRef: register({\n          required: true,\n          minLength: 6,\n          maxLength: 16\n        }),\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), errors.title && \"Title is required\", /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-filled-label\",\n          children: \"Animal Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-filled-label\",\n          id: \"demo-simple-select-filled\",\n          value: animalType,\n          onChange: e => setAnimalType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Pet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Cat\",\n            children: \"Cat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Dog\",\n            children: \"Dog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Turtles\",\n            children: \"Turtles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Wild\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Bear\",\n            children: \"Bear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Deer\",\n            children: \"Thirty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"filled-basic\",\n        label: \"Race\",\n        variant: \"filled\",\n        inputRef: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Bounty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 20,\n        value: bounty,\n        onChange: e => setBounty(e.target.value),\n        getAriaValueText: valuetext,\n        \"aria-labelledby\": \"discrete-slider\",\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        marks: true,\n        min: 5,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Danger (if wild, if not leave empty)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 1,\n        value: danger,\n        onChange: e => setDanger(e.target.value),\n        getAriaValueText: valuetext,\n        \"aria-labelledby\": \"discrete-slider\",\n        valueLabelDisplay: \"auto\",\n        step: 1,\n        marks: true,\n        min: 1,\n        max: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"filled-multiline-static\",\n        fullWidth: true,\n        className: classes.formControl,\n        label: \"Explanation\",\n        value: explanation,\n        onChange: e => setExplanation(e.target.value),\n        multiline: true,\n        rows: 5,\n        placeholder: \"I found a lost animal!\",\n        variant: \"filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n        label: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), isSuccessfull === true ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"outlined\",\n      severity: \"error\",\n      children: \"Unknown Error Submitting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 40\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(ReportForm, \"grXkky21atXM0+EVhOnHyPu0adE=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = ReportForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportForm\");","map":{"version":3,"sources":["C:/Users/fetih/OneDrive/Desktop/Websites/mern-stack/client/src/compenents/CRUDs/Requests/RequestCreate.tsx"],"names":["React","useState","makeStyles","TextField","useForm","createReport","InputLabel","MenuItem","FormControl","Select","UploadForm","ListSubheader","Typography","Slider","Alert","useStyles","theme","root","margin","spacing","width","formControl","minWidth","title","fullWidth","slider","ReportForm","classes","loading","setLoading","register","handleSubmit","errors","setTitle","animalType","setAnimalType","animalRace","setAnimalRace","bounty","setBounty","danger","setDanger","explanation","setExplanation","isSuccessfull","setIsSuccessfull","onSubmit","data","error","console","valuetext","value","e","target","required","minLength","maxLength","shrink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useForm } from 'react-hook-form';\r\nimport createReport from '../../../hooks/reportsAPI'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport UploadForm from '../../ImageOrVideoUploadForm'\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    title: {\r\n        margin: 8,\r\n        fullWidth: true\r\n    },\r\n    slider: {\r\n      width: 300\r\n    }\r\n  }))\r\n\r\nexport default function ReportForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //Data\r\n  const [title, setTitle] = useState('')\r\n  const [animalType, setAnimalType] = useState('')\r\n  const [animalRace, setAnimalRace] = useState('')\r\n  const [bounty, setBounty] = useState('')\r\n  const [danger, setDanger] = useState(1)\r\n  const [explanation, setExplanation] = useState('')\r\n\r\n  const [isSuccessfull, setIsSuccessfull] = useState(true)\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true)\r\n      // data.latitude = location.latitude;\r\n      // data.longitude = location.longitude;\r\n      await createReport(data)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setIsSuccessfull(false)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  function valuetext(value) {\r\n    return `\\$${value}`;\r\n  }\r\n\r\n    return (\r\n        <>\r\n            <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n                <TextField\r\n                id=\"standard-basic\" \r\n                label=\"Title\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Title\"\r\n                helperText=\"Be Descriptive\"\r\n                fullWidth\r\n                value={title}\r\n                onChange={e => setTitle(e.target.value)}\r\n                inputRef={register({required: true, minLength: 6, maxLength: 16})}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                />\r\n                { errors.title && \"Title is required\"}\r\n                <FormControl variant=\"filled\" className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-filled-label\">Animal Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"demo-simple-select-filled\"\r\n                    value={animalType}\r\n                    onChange={e => setAnimalType(e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <ListSubheader>Pet</ListSubheader>\r\n                    <MenuItem value=\"Cat\">Cat</MenuItem>\r\n                    <MenuItem value=\"Dog\">Dog</MenuItem>\r\n                    <MenuItem value=\"Turtles\">Turtles</MenuItem>\r\n                    <ListSubheader>Wild</ListSubheader>\r\n                    <MenuItem value=\"Bear\">Bear</MenuItem>\r\n                    <MenuItem value=\"Deer\">Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField id=\"filled-basic\" label=\"Race\" variant=\"filled\" inputRef={register}/>\r\n                <Typography id=\"discrete-slider\" gutterBottom>\r\n                  Bounty\r\n                </Typography>\r\n                <Slider\r\n                  defaultValue={20}\r\n                  value={bounty}\r\n                  onChange={e => setBounty(e.target.value)}\r\n                  getAriaValueText={valuetext}\r\n                  aria-labelledby=\"discrete-slider\"\r\n                  valueLabelDisplay=\"auto\"\r\n                  step={5}\r\n                  marks\r\n                  min={5}\r\n                  max={100}\r\n                /><Typography id=\"discrete-slider\" gutterBottom>\r\n                  Danger (if wild, if not leave empty)\r\n                </Typography>\r\n                <Slider\r\n                  defaultValue={1}\r\n                  value={danger}\r\n                  onChange={e => setDanger(e.target.value)}\r\n                  getAriaValueText={valuetext}\r\n                  aria-labelledby=\"discrete-slider\"\r\n                  valueLabelDisplay=\"auto\"\r\n                  step={1}\r\n                  marks\r\n                  min={1}\r\n                  max={10}\r\n                />\r\n                <TextField\r\n                  id=\"filled-multiline-static\"\r\n                  fullWidth\r\n                  className={classes.formControl}\r\n                  label=\"Explanation\"\r\n                  value={explanation}\r\n                  onChange={e => setExplanation(e.target.value)}\r\n                  multiline\r\n                  rows={5}\r\n                  placeholder=\"I found a lost animal!\"\r\n                  variant=\"filled\"\r\n                />\r\n                <UploadForm label=\"Upload\"/>\r\n                <button disabled={loading}>{loading ? 'Loading...' : 'Submit'}</button>\r\n            </form>\r\n            { isSuccessfull === true ? <Alert variant=\"outlined\" severity=\"error\">Unknown Error Submitting</Alert> : null }\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}