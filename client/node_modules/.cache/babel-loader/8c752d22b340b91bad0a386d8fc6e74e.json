{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fetih\\\\OneDrive\\\\Desktop\\\\Websites\\\\mern-stack\\\\client\\\\src\\\\contexts\\\\ContactProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useSocket } from './SocketIOProvider';\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  _s();\n\n  return useContext(ContactsContext);\n}\n\n_s(useContacts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ContactsProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    socketItem,\n    idItem\n  } = useSocket();\n  const [socket, setSocket] = socketItem;\n  const [id, setId] = idItem;\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [selectedContactsIndex, setSelectedContactsIndex] = useState(0);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ContactsProvider, \"YzzJQ8QbwT/pmCjCNbHIfjyp4vE=\", false, function () {\n  return [useSocket, useLocalStorage];\n});\n\n_c = ContactsProvider;\n\nfunction arrayEquality(a, b) {\n  if (a.length !== b.length) return false;\n  a.sort();\n  b.sort();\n  return a.every((element, index) => {\n    return element === b[index];\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"sources":["C:/Users/fetih/OneDrive/Desktop/Websites/mern-stack/client/src/contexts/ContactProvider.js"],"names":["React","useContext","useState","useEffect","useLocalStorage","useSocket","ContactsContext","createContext","useContacts","ContactsProvider","children","socketItem","idItem","socket","setSocket","id","setId","contacts","setContacts","selectedContactsIndex","setSelectedContactsIndex","createContact","name","prevContacts","arrayEquality","a","b","length","sort","every","element","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAyD,OAAzD;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,eAAe,gBAAGN,KAAK,CAACO,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,SAAOP,UAAU,CAACK,eAAD,CAAjB;AACD;;GAFeE,W;;AAIhB,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBP,SAAS,EAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBH,UAA5B;AACA,QAAM,CAACI,EAAD,EAAKC,KAAL,IAAcJ,MAApB;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bd,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;AACA,QAAM,CAACe,qBAAD,EAAwBC,wBAAxB,IAAoDlB,QAAQ,CAAC,CAAD,CAAlE;;AAEA,WAASmB,aAAT,CAAuBN,EAAvB,EAA2BO,IAA3B,EAAiC;AAC/BJ,IAAAA,WAAW,CAACK,YAAY,IAAI;AAC1B,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAAER,QAAAA,EAAF;AAAMO,QAAAA;AAAN,OAAlB,CAAP;AACD,KAFU,CAAX;AAGD;;AAED,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAF;AAAYI,MAAAA;AAAZ,KAAjC;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAlBeD,gB;UACiBJ,S,EAGCD,e;;;KAJlBK,gB;;AAoBhB,SAASe,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B,OAAO,KAAP;AAE3BF,EAAAA,CAAC,CAACG,IAAF;AACAF,EAAAA,CAAC,CAACE,IAAF;AAEA,SAAOH,CAAC,CAACI,KAAF,CAAQ,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,WAAOD,OAAO,KAAKJ,CAAC,CAACK,KAAD,CAApB;AACD,GAFM,CAAP;AAGD","sourcesContent":["import React, { useContext, useState, useEffect,  } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { useSocket } from './SocketIOProvider';\r\n\r\nconst ContactsContext = React.createContext()\r\n\r\nexport function useContacts() {\r\n  return useContext(ContactsContext)\r\n}\r\n\r\nexport function ContactsProvider({ children }) {\r\n  const { socketItem, idItem } = useSocket()\r\n  const [socket, setSocket] = socketItem;\r\n  const [id, setId] = idItem;\r\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\r\n  const [selectedContactsIndex, setSelectedContactsIndex] = useState(0)\r\n\r\n  function createContact(id, name) {\r\n    setContacts(prevContacts => {\r\n      return [...prevContacts, { id, name }]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ContactsContext.Provider value={{ contacts, createContact }}>\r\n      {children}\r\n    </ContactsContext.Provider>\r\n  )\r\n}\r\n\r\nfunction arrayEquality(a, b) {\r\n  if (a.length !== b.length) return false\r\n\r\n  a.sort()\r\n  b.sort()\r\n\r\n  return a.every((element, index) => {\r\n    return element === b[index]\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}